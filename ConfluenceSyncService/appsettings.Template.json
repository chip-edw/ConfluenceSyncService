{
  "Instance": "https://login.microsoftonline.com/{tenant}",
  "ApiUrl": "https://graph.microsoft.com/",
  "ManagementApiPort": 8080,

  "ConnectionStrings": {
    "DefaultConnection": "Data Source=DB/ConfluenceSyncServiceDB.db;Cache=Shared"
  },

  "GeneralSettings": {
    "_comment": "Seconds of delay between each loop of the worker.",
    "TimeDelay": 30,
    "SendStartupEmail": false,
    "AdminEmail": "admin@example.com"
  },

  "SecretsProvider": {
    "_comment": "For 'Type' use 'AzureKeyVault' or 'Sqlite'.",
    "Type": "AzureKeyVault",
    "AzureKeyVaultUri": "https://YOUR-KEYVAULT-NAME.vault.azure.net/"
  },

  "WorkflowMapping": {
    "Path": "Data/Configs/mapping.transition.json"
  },

  "CursorStore": {
    "Path": "%LOCALAPPDATA%/ConfluenceSyncService/cursors.json"
  },

  "State": {
    "CursorsPath": "%LOCALAPPDATA%/ConfluenceSyncService/cursors.json",
    "DbPath": "DB/ConfluenceSyncServiceDB.db"
  },

  "Confluence": {
    "CloudId": "REPLACE_ME",
    "BaseUrl": "https://YOUR-SPACE.atlassian.net/wiki/api/v2",
    "CustomerWikiTemplate": "REPLACE_ME",
    "CustomerWikiTemplateId": "REPLACE_ME",
    "CustomersParentPageId": "REPLACE_ME",
    "SpaceKey": "REPLACE_ME"
  },
  "ConfluenceOAuth": {
    "DefaultProfile": "Default"
  },

  "ConfluenceColorMappings": {
    "StatusFF": {
      "red": "Red",
      "yellow": "Amber",
      "green": "Green"
    },
    "StatusCust": {
      "red": "Red",
      "yellow": "Amber",
      "green": "Green"
    },
    "SupportImpact": {
      "green": "Low",
      "yellow": "Medium",
      "red": "High"
    },
    "SupportAccepted": {
      "green": "Yes",
      "yellow": "Pending",
      "red": "No"
    },
    "SyncTracker": {
      "green": "Yes",
      "red": "No"
    },
    "Region": {
      "yellow": "EMEA",
      "green": "APAC",
      "purple": "NA"
    }
  },

  "SharePoint": {
    "MaxFallbackItems": 40,
    "EnableFallbackFiltering": true,
    "Hostname": "YOUR-TENANT.sharepoint.com",
    "Sites": [
      {
        "DisplayName": "Support",
        "SitePath": "YOUR-TENANT.sharepoint.com:/sites/Support",
        "SiteId": "REPLACE_ME",
        "Lists": [
          { "DisplayName": "Transition Tracker" },
          { "DisplayName": "TransitionCustomers" },
          { "DisplayName": "Phase Tasks & Metadata" }
        ]
      }
    ]
  },

  "SharePointFieldMappings": {
    "TransitionTracker": {
      "Customer": "Title",
      "Region": "field_1",
      "StatusFF": "field_2",
      "StatusCust": "field_3",
      "Phase": "field_4",
      "SupportImpact": "field_7",
      "SupportAccepted": "field_8",
      "Notes": "field_9",
      "CustomerWiki": "field_10",
      "GoLiveDate": "Go_x002d_LiveDate",
      "SupportGoLiveDate": "SupportGo_x002d_LiveDate",
      "SyncTracker": "SyncTracker",
      "ConfluencePageId": "ConfluencePageId",
      "CustomerId": "CustomerId"
    },
    "Phase Tasks & Metadata": {
      "Customer": "Title",
      "PhaseID": "PhaseID",
      "PhaseName": "PhaseName",
      "TaskId": "TaskId",
      "TaskName": "TaskName",
      "TaskCategory": "TaskCategory",
      "Role": "Role",
      "AnchorDateType": "AnchorDateType",
      "StartOffsetDays": "StartOffsetDays",
      "DurationBusinessDays": "DurationBusinessDays",
      "GoLiveDate": "GoLiveDate",
      "HypercareEndDate": "HypercareEndDate",
      "Status": "Status",
      "CompletedDate": "CompletedDate",
      "ChaseCount": "ChaseCount",
      "NextChaseAtUtc": "NextChaseAtUtc",
      "AckedBy": "AckedBy",
      "AckedByActual": "AckedByActual",
      "NotifiedAtUtc": "NotifiedAtUtc",
      "CorrelationId": "CorrelationId",
      "CustomerId": "CustomerId",
      "Important": "Important",
      "DueDateUtc": "DueDateUtc"
    },
    "TransitionCustomers": {
      "Customer": "Title",
      "ConfluencePageID": "ConfluencePageID",
      "ConfluencePageURL": "ConfluencePageURL",
      "ActivePhaseID": "ActivePhaseID",
      "CustomerId": "CustomerId",
      "Region": "Region"
    },
    "Transition Resources": {
      "ResourceEmail": "Title",
      "ResourceId": "ResourceId",
      "Role": "Role",
      "Region": "Region"
    }
  },

  "Identity": {
    "_comment": "Mode: JwtBearer | EasyAuth | HeaderSso",
    "Mode": "JwtBearer",
    "HeaderSso": {
      "EmailHeader": "X-User-Email",
      "NameHeader": "X-User-Name",
      "UpnHeader": "X-User-UPN"
    }
  },

  "AckLink": {
    "_doc": "All secrets/URLs should come from App Settings or Key Vault in non-dev.",
    "SigningKey": "base64-or-raw-secret", // set via Key Vault or user-secrets in real environments,
    "BaseUrl": "https://YOUR-ACK-APP.azurewebsites.net",
    "GraceDays": 1,
    "Policy": {
      "_doc": {
        "InitialTtlCapHours": "Cap (in hours) for pre-due link TTL. Effective TTL is min(time-until-due + CushionHours, this cap).",
        "CushionHours": "Extra hours added to pre-due link TTL.",
        "ChaserTtlHours": "TTL (in hours) for each post-due chaser link.",
        "RequireLatestLink": "true = only newest link is valid; false = allow some older links.",
        "AllowedPreviousLinks": "Number of older links to accept when RequireLatestLink=false."
      },
      "InitialTtlCapHours": 336,
      "CushionHours": 12,
      "ChaserTtlHours": 36,
      "RequireLatestLink": true,
      "AllowedPreviousLinks": 0
    }
  },

  "ChaserJob_doc": {
    "_": "Scheduler for overdue chasers and link rotation. JSON has no native comments; this _doc explains each field.",
    "Enabled": "bool – run the chaser background job. Keep false on ACK-only App Service.",
    "CadenceMinutes": "int – how often the job wakes up. Lower = more responsive but higher CPU.",
    "BatchSize": "int – max tasks processed per run to cap API/CPU.",
    "QuerySource": "\"SharePoint\" | \"SQLiteFirst\" | \"Hybrid\" – candidate source. SQLiteFirst = use SQLite scheduler cache, then confirm each candidate on SharePoint by item id.",
    "SendHourLocal": "int (0–23) – consistent daily send hour in the task’s local/region time.",
    "BusinessWindow": {
      "StartHourLocal": "int (0–23) – business day start hour (local).",
      "EndHourLocal": "int (0–23) – business day end hour (local).",
      "CushionHours": "int – buffer around working hours (policy uses 12)."
    },
    "ThreadFallback": "\"RootNew\" | \"Skip\" – if thread metadata is missing, create a new root post (RootNew) or skip sending (Skip).",
    "Safety": {
      "MaxConsecutiveFailures": "int – circuit breaker threshold; after this many consecutive failures, job cools off.",
      "CoolOffMinutes": "int – cool-off duration before retrying after breaker trips."
    }
  },
  "ChaserJob": {
    "Enabled": false,
    "CadenceMinutes": 15,
    "BatchSize": 50,
    "QuerySource": "SQLiteFirst",
    "SendHourLocal": 9,
    "BusinessWindow": {
      "StartHourLocal": 8,
      "EndHourLocal": 18,
      "CushionHours": 12
    },
    "ThreadFallback": "RootNew",
    "Safety": {
      "MaxConsecutiveFailures": 5,
      "CoolOffMinutes": 5
    }
  },

  "Teams": {
    "Team": "Support Transition Checklists",
    "TeamId": "REPLACE_ME",
    "Channel": "Task Notifications",
    "ChannelId": "REPLACE_ME"
  },

  "Chaser": {
    "ListId": "REPLACE_ME",
    "PollInterval": "00:05:00"
  },

  "RegionOffsets": {
    "Offsets": {
      "NA": -5,
      "EMEA": 1,
      "APAC": 10
    }
  },

  "Email": {
    "FromEmail": "no-reply@example.com",
    "FromDisplayName": "Confluence Sync Service",
    "SendServiceStartEmail": false,
    "Notifications": {
      "TaskNotification": { "FromDisplayName": "Support Transition Tasks" },
      "Alert": {
        "ToEmail": "alerts@example.com",
        "FromDisplayName": "Sync Service Alerts"
      }
    }
  },

  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Microsoft.Hosting.Lifetime": "Warning",
        "ConfluenceSyncService.MSAL": "Warning",
        "ConfluenceSyncService.HTTP": "Warning",
        "ConfluenceSyncService.Worker": "Warning",
        "ConfluenceSyncService.MSGraphAPI.ConfidentialClientApp": "Warning",
        "ConfluenceSyncService.LoggingHandler": "Warning",
        "ConfluenceSyncService.Services.Sync.SyncOrchestratorService": "Warning",
        "ConfluenceSyncService.Services.Clients.ConfluenceClient": "Warning",
        "ConfluenceSyncService.Services.Clients.SharePointClient": "Warning",
        "ConfluenceSyncService.Services.Secrets": "Warning",
        "ConfluenceSyncService.Common.Secrets": "Warning",
        "ConfluenceSyncService.Controllers.MaintenanceController": "Debug",
        "ConfluenceSyncService.Services.Maintenance.SignatureService": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": { "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level:u3}] ({SourceContext}) {Message:lj}{NewLine}{Exception}" }
      },
      {
        "Name": "File",
        "Args": {
          "path": "logs/application-.log",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level:u3}] ({SourceContext}) {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithThreadId", "WithMachineName" ],
    "Properties": { "Application": "ConfluenceSyncServer" }
  },

  "LoggingSettings": {
    "EnableMSALLogging": false,
    "EnableHTTPLogging": false
  }
}
