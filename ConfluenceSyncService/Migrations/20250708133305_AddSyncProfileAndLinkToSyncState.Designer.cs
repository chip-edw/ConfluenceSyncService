// <auto-generated />
using System;
using ConfluenceSyncService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConfluenceSyncService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250708133305_AddSyncProfileAndLinkToSyncState")]
    partial class AddSyncProfileAndLinkToSyncState
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("ConfluenceSyncService.Models.ConfigStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConfigStore");
                });

            modelBuilder.Entity("ConfluenceSyncService.Models.SyncProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfluenceDashboardPageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfluenceDatabaseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfluenceSpaceKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SharePointListId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SharePointSiteId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SyncProfile");
                });

            modelBuilder.Entity("ConfluenceSyncService.Models.SyncState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfluenceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastConfluenceModifiedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSharePointModifiedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSource")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSyncedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("SharePointId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SyncProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SyncProfileId");

                    b.HasIndex("SharePointId", "ConfluenceId");

                    b.ToTable("SyncStates");
                });

            modelBuilder.Entity("ConfluenceSyncService.Models.SyncState", b =>
                {
                    b.HasOne("ConfluenceSyncService.Models.SyncProfile", "SyncProfile")
                        .WithMany()
                        .HasForeignKey("SyncProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SyncProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
